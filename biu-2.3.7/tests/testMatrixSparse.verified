========== BEGIN OF TEST =================
 test template class : MatrixSparseR<int>
==========================================
matrix m1 = 
0 0 0 0 
0 0 0 0 
0 0 0 0 
0 0 0 0 
matrix m2 = 
0 0 
0 0 
0 0 
0 0 

matrix m3(m2) = 
0 0 
0 0 
0 0 
0 0 

matrix m3 = m1 : 
0 0 0 0 
0 0 0 0 
0 0 0 0 
0 0 0 0 

m2.resize(3,3,1)
matrix m2 = 
1 1 1 
1 1 1 
1 1 1 

m1 == m2 = false
m2.numRows() = 3
m2.numColumns() = 3
m2.resize(4,4)
m2.numRows() = 4
m2.numColumns() = 4
m1 == m2 = false
m1.getDefaultValue() = 0
m1.setDefaultValue(1)
m1.getDefaultValue() = 1
m1 == m2 = true
m2 == m2 = true
m1.exists(2,1) = false
m1.atConst(2,1) = 1
m1.exists(2,1) = false
(const m1).at(2,1) = 1
m1.exists(2,1) = false
m1.at(2,1) += 3
m1.exists(2,1) = true
m1.at(2,1) = 4
m1.rowVec(..)
1 1 1 1 
1 1 1 1 
1 4 1 1 
1 1 1 1 
m1.rowValues(..)
0 : 
1 : 
2 : 1=4, 
3 : 
m1.columnVec(..)
1 1 1 1 
1 1 1 1 
1 4 1 1 
1 1 1 1 
m1.columnValues(..)
0 : 
1 : 2=4, 
2 : 
3 : 

========== END OF TEST =================

========== BEGIN OF TEST =================
 test template class : MatrixSparseC<int>
==========================================
matrix m1 = 
0 0 0 0 
0 0 0 0 
0 0 0 0 
0 0 0 0 
matrix m2 = 
0 0 
0 0 
0 0 
0 0 

matrix m3(m2) = 
0 0 
0 0 
0 0 
0 0 

matrix m3 = m1 : 
0 0 0 0 
0 0 0 0 
0 0 0 0 
0 0 0 0 

m2.resize(3,3,1)
matrix m2 = 
1 1 1 
1 1 1 
1 1 1 

m1 == m2 = false
m2.numRows() = 3
m2.numColumns() = 3
m2.resize(4,4)
m2.numRows() = 4
m2.numColumns() = 4
m1 == m2 = false
m1.getDefaultValue() = 0
m1.setDefaultValue(1)
m1.getDefaultValue() = 1
m1 == m2 = true
m2 == m2 = true
m1.exists(2,1) = false
m1.atConst(2,1) = 1
m1.exists(2,1) = false
(const m1).at(2,1) = 1
m1.exists(2,1) = false
m1.at(2,1) += 3
m1.exists(2,1) = true
m1.at(2,1) = 4
m1.rowVec(..)
1 1 1 1 
1 1 1 1 
1 4 1 1 
1 1 1 1 
m1.rowValues(..)
0 : 
1 : 
2 : 1=4, 
3 : 
m1.columnVec(..)
1 1 1 1 
1 1 1 1 
1 4 1 1 
1 1 1 1 
m1.columnValues(..)
0 : 
1 : 2=4, 
2 : 
3 : 

========== END OF TEST =================

